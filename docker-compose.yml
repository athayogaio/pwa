version: '3'

services:
  server:
    build: backend/
    container_name: "backend-${CONTAINER_SUFFIX}"
    env_file:
      - "${ENV_FILE}"
    ports:
      - "${BACKEND_PORT}:8000"
    volumes:
      - ./backend/static:/opt/services/backend/src/static
      - ./backend/core/logs:/opt/services/backend/src/core/logs
    depends_on:
      - db

  frontend:
    build: frontend/
    container_name: "frontend-${CONTAINER_SUFFIX}"
    ports:
      - "${FRONTEND_PORT}:8080"

  cypress:
    build: frontend/tests/
    container_name: "cypress-${CONTAINER_SUFFIX}"
    environment:
      - "CYPRESS_baseUrl=http://frontend-${CONTAINER_SUFFIX}:8080"
      - "BRANCH_NAME=${CONTAINER_SUFFIX}"
    volumes:
      - ./frontend/tests/cypress/reports/:/e2e/cypress/reports/
      - ./frontend/tests/cypress/videos/:/e2e/cypress/videos/
    depends_on:
      - frontend

  db:
    image: postgres:14
    container_name: "db-${CONTAINER_SUFFIX}"
    env_file:
      - "${ENV_FILE}"
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - ./db:/var/lib/postgresql/data

  dozzle:
    container_name: "dozzle-${CONTAINER_SUFFIX}"
    image: amir20/dozzle:v4.4.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "${DOZZLE_PORT}:${DOZZLE_PORT}"
    environment:
      - "DOZZLE_ADDR=:${DOZZLE_PORT}"

  elasticsearch:
    image: elasticsearch:7.17.5
    container_name: "elasticsearch-${CONTAINER_SUFFIX}"
    env_file:
      - "${ENV_FILE}"
    ports:
      - "${ELASTIC_PORT}:9200"
    volumes:
      - .devops/build/hunspell:/usr/share/elasticsearch/config/hunspell
      - ./elasticsearch:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.security.enabled=true
      - ES_JAVA_OPTS=-Xms750m -Xmx750m

  redis:
    image: redis:7.0
    container_name: "redis-${CONTAINER_SUFFIX}"
    command:
      - redis-server
      - --requirepass
      - ${REDIS_PASSWORD}
    env_file:
      - "${ENV_FILE}"
    environment:
      - "REDIS_PASSWORD=${REDIS_PASSWORD}"
      - "REDIS_PORT=${REDIS_PORT}"
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./redis:/data

  rabbitmq:
    image: rabbitmq:3.11.7-management
    container_name: "rabbitmq-${CONTAINER_SUFFIX}"
    env_file:
      - "${ENV_FILE}"
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_MANAGEMENT_PORT}:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - ./rabbitmq/:/var/lib/rabbitmq

  flower:
    image: mher/flower:1.2
    container_name: "flower-${CONTAINER_SUFFIX}"
    command: "celery flower --broker_api=http://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@\
              ${RABBITMQ_HOST}:${RABBITMQ_MANAGEMENT_PORT}/api/"
    env_file:
      - "${ENV_FILE}"
    ports:
      - "${FLOWER_PORT}:5555"
    environment:
      - "CELERY_BROKER_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@\
         rabbitmq-${CONTAINER_SUFFIX}:${RABBITMQ_PORT}//"
      - "FLOWER_BASIC_AUTH=${FLOWER_BASIC_AUTH}"
