# Generated by Django 4.1.5 on 2023-01-21 07:54

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import core.app.utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BaseCourse",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата и время изменения"
                    ),
                ),
                ("name", models.CharField(max_length=64, verbose_name="Наименование")),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "course_type",
                    models.CharField(
                        choices=[("ONLINE", "Online"), ("VIDEO", "Video")],
                        max_length=30,
                        verbose_name="Тип",
                    ),
                ),
                ("level", models.JSONField(verbose_name="Уровень")),
                (
                    "complexity",
                    models.CharField(
                        choices=[
                            ("EASY", "Easy"),
                            ("MEDIUM", "Medium"),
                            ("HARD", "Hard"),
                        ],
                        max_length=30,
                        verbose_name="Сложность",
                    ),
                ),
                (
                    "favorites",
                    models.ManyToManyField(
                        blank=True,
                        related_name="favorite_courses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Избранное",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Преподаватель",
                    ),
                ),
            ],
            options={
                "verbose_name": "Базовый курс",
                "verbose_name_plural": "Базовые курсы",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата и время изменения"
                    ),
                ),
                ("duration", models.DurationField(verbose_name="Продолжительность")),
                (
                    "start_datetime",
                    models.DateTimeField(verbose_name="Дата и время начала"),
                ),
                (
                    "deadline_datetime",
                    models.DateTimeField(verbose_name="Дата и время окончания"),
                ),
                ("link", models.URLField(verbose_name="Ссылка для подключения")),
                (
                    "link_info",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Информация о подключении",
                    ),
                ),
                (
                    "payment",
                    models.CharField(
                        choices=[
                            ("PAYMENT", "Payment"),
                            ("DONATION", "Donation"),
                            ("FREE", "Free"),
                        ],
                        max_length=30,
                        verbose_name="Тип платежа",
                    ),
                ),
                (
                    "price",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(limit_value=0)
                        ],
                        verbose_name="Цена",
                    ),
                ),
                (
                    "schedule",
                    core.app.utils.fields.JSONParsedField(
                        blank=True, default=list, verbose_name="Расписание"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("CANCELED", "Canceled"),
                            ("DRAFT", "Draft"),
                            ("PUBLISHED", "Published"),
                            ("MODERATION", "Moderation"),
                            ("DECLINED", "Declined"),
                            ("COMPLETED", "Completed"),
                        ],
                        default="MODERATION",
                        max_length=40,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "base_course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to="courses.basecourse",
                        verbose_name="Базовый курс",
                    ),
                ),
            ],
            options={
                "verbose_name": "Курс",
                "verbose_name_plural": "Курсы",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата и время изменения"
                    ),
                ),
                ("text", models.TextField(verbose_name="Текст")),
                (
                    "star_rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(limit_value=1),
                            django.core.validators.MaxValueValidator(limit_value=5),
                        ],
                        verbose_name="Рейтинг",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отзыв",
                "verbose_name_plural": "Отзывы",
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата и время изменения"
                    ),
                ),
                ("amount", models.IntegerField(verbose_name="Количество посещений")),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="courses.course",
                        verbose_name="Курс",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Владелец",
                    ),
                ),
            ],
            options={
                "verbose_name": "Билет",
                "verbose_name_plural": "Билеты",
            },
        ),
        migrations.CreateModel(
            name="TicketTransaction",
            fields=[
                (
                    "transaction_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.transaction",
                    ),
                ),
                (
                    "ticket_amount",
                    models.IntegerField(verbose_name="Количество посещений"),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.ticket",
                        verbose_name="Билет",
                    ),
                ),
            ],
            options={
                "verbose_name": "Транзакция билета",
                "verbose_name_plural": "Транзакции билетов",
            },
            bases=("core.transaction",),
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата и время изменения"
                    ),
                ),
                ("start_at", models.DateTimeField(verbose_name="Дата и время начала")),
                (
                    "status",
                    models.CharField(
                        choices=[("ACTIVE", "Active"), ("CANCELED", "Canceled")],
                        default="ACTIVE",
                        max_length=30,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons_set",
                        to="courses.course",
                        verbose_name="Курс",
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        to=settings.AUTH_USER_MODEL, verbose_name="Участники"
                    ),
                ),
            ],
            options={
                "verbose_name": "Занятие",
                "verbose_name_plural": "Занятия",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="CourseCycle",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата и время изменения"
                    ),
                ),
                ("start_at", models.DateTimeField(verbose_name="Дата и время начала")),
                ("end_at", models.DateTimeField(verbose_name="Дата и время окончания")),
                (
                    "canceled_lessons_amount",
                    models.IntegerField(
                        default=0, verbose_name="Количество отмененных занятий"
                    ),
                ),
                (
                    "transferred_lessons_amount",
                    models.IntegerField(
                        default=0, verbose_name="Количество перенесенных занятий"
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.course",
                        verbose_name="Курс",
                    ),
                ),
            ],
            options={
                "verbose_name": "Цикл курса",
                "verbose_name_plural": "Циклы курсов",
            },
        ),
        migrations.CreateModel(
            name="CourseComment",
            fields=[
                (
                    "comment_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.comment",
                    ),
                ),
                (
                    "base_course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="courses.basecourse",
                        verbose_name="Базовый курс",
                    ),
                ),
            ],
            options={
                "verbose_name": "Комментарий к курсу",
                "verbose_name_plural": "Комментарии к курсу",
            },
            bases=("core.comment",),
        ),
        migrations.CreateModel(
            name="CourseReview",
            fields=[
                (
                    "review_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="courses.review",
                    ),
                ),
                (
                    "base_course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="courses.basecourse",
                        verbose_name="Отзыв о курсе",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отзыв о курсе",
                "verbose_name_plural": "Отзывы о курсе",
            },
            bases=("courses.review",),
        ),
    ]
