# Generated by Django 4.1.5 on 2023-02-04 12:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("core", "0002_userbillinginfo_user_region_userbillinginforu_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="questionnaireteacher",
            name="status",
        ),
        migrations.RemoveField(
            model_name="questionnaireteacher",
            name="user",
        ),
        migrations.RemoveField(
            model_name="userbillinginfo",
            name="bic",
        ),
        migrations.AddField(
            model_name="userbillinginforu",
            name="bic",
            field=models.CharField(
                default=None,
                max_length=50,
                validators=[
                    django.core.validators.RegexValidator(regex="^[A-Z0-9]{9}$")
                ],
                verbose_name="БИК",
            ),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name="UserBillingInfoEU",
            fields=[
                (
                    "userbillinginfo_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.userbillinginfo",
                    ),
                ),
                ("inn", models.CharField(max_length=50, verbose_name="ИНН")),
                (
                    "correspondent_account",
                    models.CharField(
                        max_length=50, verbose_name="Корреспондентский счет"
                    ),
                ),
                ("prc", models.CharField(max_length=50, verbose_name="КПП")),
                ("bic", models.CharField(max_length=50)),
                (
                    "account_number",
                    models.CharField(max_length=50, verbose_name="Номер счета"),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("core.userbillinginfo",),
        ),
        migrations.CreateModel(
            name="TeacherProfileDB",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата и время изменения"
                    ),
                ),
                ("billing_info_obj_id", models.PositiveIntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("MODERATION", "Moderation"),
                            ("ACCEPTED", "Accepted"),
                            ("DECLINED", "Declined"),
                        ],
                        default="MODERATION",
                        max_length=30,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "billing_info_content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "questionnaire",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.questionnaireteacher",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_profiles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
                "abstract": False,
            },
        ),
    ]
